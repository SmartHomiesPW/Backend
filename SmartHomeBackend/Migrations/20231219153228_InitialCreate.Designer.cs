// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartHomeBackend.Database;

#nullable disable

namespace SmartHomeBackend.Migrations
{
    [DbContext(typeof(SmartHomeDbContext))]
    [Migration("20231219153228_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SmartHomeBackend.Models.HumiditySensor", b =>
                {
                    b.Property<string>("Sensor_Id")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("System_Id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.HasKey("Sensor_Id");

                    b.ToTable("Humidity_Sensors");
                });

            modelBuilder.Entity("SmartHomeBackend.Models.SunlightSensor", b =>
                {
                    b.Property<string>("Sensor_Id")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("System_Id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.HasKey("Sensor_Id");

                    b.ToTable("Light_Sensors");
                });

            modelBuilder.Entity("SmartHomeBackend.Models.SwitchableLight", b =>
                {
                    b.Property<string>("Switchable_Light_Id")
                        .HasColumnType("text");

                    b.Property<string>("System_Id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Switchable_Light_Id");

                    b.ToTable("Switchable_Lights");
                });

            modelBuilder.Entity("SmartHomeBackend.Models.System", b =>
                {
                    b.Property<string>("System_Id")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("System_Id");

                    b.ToTable("Systems");
                });

            modelBuilder.Entity("SmartHomeBackend.Models.TemperatureSensor", b =>
                {
                    b.Property<string>("Sensor_Id")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("System_Id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.HasKey("Sensor_Id");

                    b.ToTable("Temperature_Sensors");
                });

            modelBuilder.Entity("SmartHomeBackend.Models.User", b =>
                {
                    b.Property<string>("User_Id")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("User_Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
